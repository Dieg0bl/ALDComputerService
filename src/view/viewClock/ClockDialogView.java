/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view.viewClock;

import java.awt.Color;
import java.awt.event.ActionListener;
import javax.swing.border.LineBorder;

/**
 *
 * @author barreirolistediego
 */
public class ClockDialogView extends javax.swing.JDialog {

    /**
     * Creates new form ClockDialog
     */
    public ClockDialogView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        modeButtonGroup = new javax.swing.ButtonGroup();
        clockModeLabel = new javax.swing.JLabel();
        alertTimeLabel = new javax.swing.JLabel();
        messageLabel = new javax.swing.JLabel();
        setClockButton = new javax.swing.JButton();
        enableOrDisableAlarmButton = new javax.swing.JButton();
        mode24RadioButton = new javax.swing.JRadioButton();
        mode12RadioButton = new javax.swing.JRadioButton();
        hourAlarmSpinner = new javax.swing.JSpinner();
        minuteAlarmSpinner = new javax.swing.JSpinner();
        messageTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        clockModeLabel.setText("Clock mode:");

        alertTimeLabel.setText("Alert time:");

        messageLabel.setText("Message:");

        setClockButton.setBackground(new java.awt.Color(153, 255, 153));
        setClockButton.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        setClockButton.setText("SET CLOCK");
        setClockButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 0), 2, true)));

        enableOrDisableAlarmButton.setBackground(new java.awt.Color(255, 102, 102));
        enableOrDisableAlarmButton.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        enableOrDisableAlarmButton.setText("DISABLE ALARM");
        enableOrDisableAlarmButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 2, true)));

        modeButtonGroup.add(mode24RadioButton);
        mode24RadioButton.setText("24H");
        mode24RadioButton.setActionCommand("24h");
        mode24RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mode24RadioButtonActionPerformed(evt);
            }
        });

        modeButtonGroup.add(mode12RadioButton);
        mode12RadioButton.setText("12H");
        mode12RadioButton.setActionCommand("12h");

        hourAlarmSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));

        minuteAlarmSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        messageTextField.setText("Demo message");
        messageTextField.setToolTipText("Mensaje a mostrar cuando se activa la alarma");
        messageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(setClockButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(enableOrDisableAlarmButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clockModeLabel)
                            .addComponent(alertTimeLabel))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(hourAlarmSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(mode24RadioButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mode12RadioButton)
                            .addComponent(minuteAlarmSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(messageLabel)
                        .addGap(18, 18, 18)
                        .addComponent(messageTextField)))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clockModeLabel)
                    .addComponent(mode24RadioButton)
                    .addComponent(mode12RadioButton))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alertTimeLabel)
                    .addComponent(hourAlarmSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minuteAlarmSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageLabel)
                    .addComponent(messageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(setClockButton)
                .addGap(18, 18, 18)
                .addComponent(enableOrDisableAlarmButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mode24RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mode24RadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mode24RadioButtonActionPerformed

    private void messageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageTextFieldActionPerformed

    public int getHourAlarm() {
        return (int) this.hourAlarmSpinner.getValue();
    }

    public int getMinutesAlarm() {
        return (int) this.minuteAlarmSpinner.getValue();
    }

    public String getMessage() {
        return this.messageTextField.getText();
    }

    public String getSelectedOption() {
        String option = null;
        if (modeButtonGroup.getSelection() != null) {
            option = modeButtonGroup.getSelection().getActionCommand();
        }
        return option;
    }

    public void setHourAlarm(int hour) {
        this.hourAlarmSpinner.setValue(hour);
    }

    public void setMinuteAlarm(int minute) {
        this.minuteAlarmSpinner.setValue(minute);
    }

    public void setMessage(String text) {
        this.messageTextField.setText(text);
    }

    public void setMode(boolean mode) {
        if (mode) {
            this.mode24RadioButton.setSelected(true);
            this.mode12RadioButton.setSelected(false);
        } else {
            this.mode12RadioButton.setSelected(true);
            this.mode24RadioButton.setSelected(false);
        }

    }

public void setEnableAlarm(boolean status) {
    if (status) {
        enableOrDisableAlarmButton.setText("DISABLE ALARM");     
        enableOrDisableAlarmButton.setBackground(new Color(255, 102, 102));    
        enableOrDisableAlarmButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(
                javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), 
                new LineBorder(new Color(255, 0, 0), 2, true)));
    } else {
        enableOrDisableAlarmButton.setText("ENABLE ALARM");      
        enableOrDisableAlarmButton.setBackground(new Color(153, 255, 153));      
        enableOrDisableAlarmButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(
                javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), 
                new LineBorder(new Color(0, 255, 0), 2, true)));
    }
    this.dispose();
}



    public void setAddsetClockButtonActionListener(ActionListener listener) {
        this.setClockButton.addActionListener(listener);
    }

    public void setAddDisableAlarmButtonActionListener(ActionListener listener) {
        this.enableOrDisableAlarmButton.addActionListener(listener);
    }

    public void setEnableOrDisableAlarmButtonText(String text) {
        this.enableOrDisableAlarmButton.setText(text);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alertTimeLabel;
    private javax.swing.JLabel clockModeLabel;
    private javax.swing.JButton enableOrDisableAlarmButton;
    private javax.swing.JSpinner hourAlarmSpinner;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JTextField messageTextField;
    private javax.swing.JSpinner minuteAlarmSpinner;
    private javax.swing.JRadioButton mode12RadioButton;
    private javax.swing.JRadioButton mode24RadioButton;
    private javax.swing.ButtonGroup modeButtonGroup;
    private javax.swing.JButton setClockButton;
    // End of variables declaration//GEN-END:variables

}
