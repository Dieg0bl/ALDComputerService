/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view.viewComputersAndRepairs;

import java.awt.event.ActionListener;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.modelAldComputerService.Computer;
import model.modelAldComputerService.DesktopPC;
import model.modelAldComputerService.LaptopPC;
import model.modelAldComputerService.Repair;
import model.modelAldComputerService.ServerPC;

/**
 *
 * @author barreirolistediego
 */
public class ComputersAndRepairsView extends javax.swing.JDialog {

    /**
     * Creates new form viewComputer
     */
    public ComputersAndRepairsView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabsContainerTabbedPane = new javax.swing.JTabbedPane();
        ctComputersTabPanel = new javax.swing.JPanel();
        ctTableScrollPane = new javax.swing.JScrollPane();
        ctComputersTable = new javax.swing.JTable();
        ctGetInfoComputersTableButton = new javax.swing.JButton();
        ctDeleteComputersTableButton = new javax.swing.JButton();
        ctEditComputersTableButton = new javax.swing.JButton();
        ctAddComputersTableButton = new javax.swing.JButton();
        ctComputersTableHeaderLabel = new javax.swing.JLabel();
        ctComputersFormPanel = new javax.swing.JPanel();
        ctComputerTypeLabel = new javax.swing.JLabel();
        ctComputerTypeComboBox = new javax.swing.JComboBox<>();
        ctSerialNumberLabel = new javax.swing.JLabel();
        ctSerialNumberTextField = new javax.swing.JTextField();
        ctBatteryCapacityLabel = new javax.swing.JLabel();
        ctBatteryCapacityTextField = new javax.swing.JTextField();
        ctBrandLabel = new javax.swing.JLabel();
        ctBrandTextField = new javax.swing.JTextField();
        ctCaseTypeLabel = new javax.swing.JLabel();
        ctCaseTypeComboBox = new javax.swing.JComboBox<>();
        ctModelLabel = new javax.swing.JLabel();
        ctModelTextField = new javax.swing.JTextField();
        ctRaidLabel = new javax.swing.JLabel();
        ctRaidSpinner = new javax.swing.JSpinner();
        ctSaveButton = new javax.swing.JButton();
        ctCancelButton = new javax.swing.JButton();
        rpRepairsTabPanel = new javax.swing.JPanel();
        rpTableScrollPane = new javax.swing.JScrollPane();
        rpRepairsTable = new javax.swing.JTable();
        rpGetInfoRepairTableButton = new javax.swing.JButton();
        rpDeleteRepairsTableButton = new javax.swing.JButton();
        rpEditRepairsTableButton = new javax.swing.JButton();
        rpAddRepairsTableButton = new javax.swing.JButton();
        rpRepairsTableHeaderLabel = new javax.swing.JLabel();
        rpRepairsFormPanel = new javax.swing.JPanel();
        rpRepairsTypeLabel = new javax.swing.JLabel();
        rpRepairTypeComboBox = new javax.swing.JComboBox<>();
        rpDischargeDateLabel = new javax.swing.JLabel();
        rpDischargeDateFormattedTextField = new javax.swing.JFormattedTextField();
        rpContactPersonLabel = new javax.swing.JLabel();
        rpContactPersonTextField = new javax.swing.JTextField();
        rpObservationsRepairLabel = new javax.swing.JLabel();
        rpObservationsOfRepairTextField = new javax.swing.JTextField();
        rpPhoneContactLabel = new javax.swing.JLabel();
        rpPhoneContactTextField = new javax.swing.JTextField();
        rpDescriptionRepairLabel = new javax.swing.JLabel();
        rpRepairDescriptionScrollPane = new javax.swing.JScrollPane();
        rpDescriptionRepairTextArea = new javax.swing.JTextArea();
        rpIsPerformedCheckBox = new javax.swing.JCheckBox();
        rpSaveButton = new javax.swing.JButton();
        rpCancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tabsContainerTabbedPane.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 5, true));

        ctComputersTabPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ctComputersTabPanel.setPreferredSize(new java.awt.Dimension(600, 720));

        ctComputersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial number", "Brand", "Model", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ctComputersTable.setToolTipText("Computer information display table");
        ctComputersTable.setFocusable(false);
        ctComputersTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ctComputersTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ctTableScrollPane.setViewportView(ctComputersTable);

        ctGetInfoComputersTableButton.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        ctGetInfoComputersTableButton.setForeground(new java.awt.Color(0, 153, 255));
        ctGetInfoComputersTableButton.setText("GET INFO");
        ctGetInfoComputersTableButton.setToolTipText("Show information of the selected computer");

        ctDeleteComputersTableButton.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        ctDeleteComputersTableButton.setForeground(new java.awt.Color(255, 0, 0));
        ctDeleteComputersTableButton.setText("DELETE");
        ctDeleteComputersTableButton.setToolTipText("Delete the selected computer");

        ctEditComputersTableButton.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        ctEditComputersTableButton.setForeground(new java.awt.Color(255, 153, 0));
        ctEditComputersTableButton.setText("EDIT");
        ctEditComputersTableButton.setToolTipText("Edit the selected computer");
        ctEditComputersTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ctEditComputersTableButtonActionPerformed(evt);
            }
        });

        ctAddComputersTableButton.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        ctAddComputersTableButton.setForeground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));
        ctAddComputersTableButton.setText("ADD...");
        ctAddComputersTableButton.setToolTipText("Show add dialog for insert the new computer data");

        ctComputersTableHeaderLabel.setText("Computers table information");

        ctComputersFormPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Computers Data Form"));

        ctComputerTypeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ctComputerTypeLabel.setText("Computer type:");

        ctComputerTypeComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ctComputerTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please choose the type of computer here...", "DESKTOP", "LAPTOP", "SERVER" }));
        ctComputerTypeComboBox.setToolTipText("Choose here the type of computer");
        ctComputerTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ctComputerTypeComboBoxActionPerformed(evt);
            }
        });

        ctSerialNumberLabel.setText("Serial Number:");

        ctSerialNumberTextField.setToolTipText("Computer serial number");
        ctSerialNumberTextField.setPreferredSize(new java.awt.Dimension(64, 30));
        ctSerialNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ctSerialNumberTextFieldActionPerformed(evt);
            }
        });

        ctBatteryCapacityLabel.setText("Battery Capacity:");

        ctBatteryCapacityTextField.setToolTipText("Laptop battery capacity");
        ctBatteryCapacityTextField.setName(""); // NOI18N

        ctBrandLabel.setText("Brand:");

        ctBrandTextField.setToolTipText("Computer brand");
        ctBrandTextField.setMinimumSize(new java.awt.Dimension(64, 30));
        ctBrandTextField.setPreferredSize(new java.awt.Dimension(64, 30));
        ctBrandTextField.setVerifyInputWhenFocusTarget(false);

        ctCaseTypeLabel.setText("CaseType:");

        ctCaseTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ATX", "MiniATX" }));
        ctCaseTypeComboBox.setToolTipText("Desktop computer case format");
        ctCaseTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ctCaseTypeComboBoxActionPerformed(evt);
            }
        });

        ctModelLabel.setText("Model:");

        ctModelTextField.setToolTipText("Computer model");
        ctModelTextField.setPreferredSize(new java.awt.Dimension(64, 30));

        ctRaidLabel.setText("Raid:");

        ctRaidSpinner.setModel(new javax.swing.SpinnerListModel(new String[] {"None", "0", "1", "5", "6", "0+1", "1+0", "10+1", "Otro"}));
        ctRaidSpinner.setToolTipText("Type of raid configuration ");
        ctRaidSpinner.setRequestFocusEnabled(false);

        ctSaveButton.setBackground(new java.awt.Color(153, 255, 153));
        ctSaveButton.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        ctSaveButton.setText("SAVE");
        ctSaveButton.setToolTipText("Save and add the new computer info in database");
        ctSaveButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 0), 2, true)));
        ctSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ctSaveButtonActionPerformed(evt);
            }
        });

        ctCancelButton.setBackground(new java.awt.Color(255, 102, 102));
        ctCancelButton.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        ctCancelButton.setText("CANCEL");
        ctCancelButton.setToolTipText("exit whitout saving ");
        ctCancelButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 2, true)));
        ctCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ctCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ctComputersFormPanelLayout = new javax.swing.GroupLayout(ctComputersFormPanel);
        ctComputersFormPanel.setLayout(ctComputersFormPanelLayout);
        ctComputersFormPanelLayout.setHorizontalGroup(
            ctComputersFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ctComputersFormPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(ctComputersFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ctComputersFormPanelLayout.createSequentialGroup()
                        .addGroup(ctComputersFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ctSerialNumberLabel)
                            .addComponent(ctBrandLabel)
                            .addComponent(ctModelLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ctComputersFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ctSerialNumberTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ctBrandTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ctModelTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(ctComputersFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(ctComputersFormPanelLayout.createSequentialGroup()
                                .addComponent(ctRaidLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ctRaidSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ctComputersFormPanelLayout.createSequentialGroup()
                                .addComponent(ctCaseTypeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ctCaseTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ctComputersFormPanelLayout.createSequentialGroup()
                                .addComponent(ctBatteryCapacityLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ctBatteryCapacityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(ctComputersFormPanelLayout.createSequentialGroup()
                        .addComponent(ctComputerTypeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ctComputerTypeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(ctComputersFormPanelLayout.createSequentialGroup()
                        .addComponent(ctSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ctCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(8, 8, 8))
        );
        ctComputersFormPanelLayout.setVerticalGroup(
            ctComputersFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ctComputersFormPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(ctComputersFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ctComputerTypeLabel)
                    .addComponent(ctComputerTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(ctComputersFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ctSerialNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ctSerialNumberLabel)
                    .addComponent(ctBatteryCapacityLabel)
                    .addComponent(ctBatteryCapacityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ctComputersFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ctBrandTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ctBrandLabel)
                    .addComponent(ctCaseTypeLabel)
                    .addComponent(ctCaseTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ctComputersFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ctModelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ctModelLabel)
                    .addComponent(ctRaidLabel)
                    .addComponent(ctRaidSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                .addGroup(ctComputersFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ctSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ctCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout ctComputersTabPanelLayout = new javax.swing.GroupLayout(ctComputersTabPanel);
        ctComputersTabPanel.setLayout(ctComputersTabPanelLayout);
        ctComputersTabPanelLayout.setHorizontalGroup(
            ctComputersTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ctComputersTabPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(ctComputersTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ctTableScrollPane, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ctComputersTabPanelLayout.createSequentialGroup()
                        .addComponent(ctDeleteComputersTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ctGetInfoComputersTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ctEditComputersTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ctAddComputersTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ctComputersFormPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ctComputersTableHeaderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        ctComputersTabPanelLayout.setVerticalGroup(
            ctComputersTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ctComputersTabPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(ctComputersTableHeaderLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ctTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ctComputersTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ctDeleteComputersTableButton)
                    .addComponent(ctGetInfoComputersTableButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ctEditComputersTableButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ctAddComputersTableButton))
                .addGap(18, 18, 18)
                .addComponent(ctComputersFormPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabsContainerTabbedPane.addTab("Computers", ctComputersTabPanel);

        rpRepairsTabPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        rpRepairsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Is performed", "Maintenance type", "Discharge date", "Phone contact", "Observations"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        rpRepairsTable.setToolTipText("Repairs information display table");
        rpRepairsTable.setFocusable(false);
        rpRepairsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        rpTableScrollPane.setViewportView(rpRepairsTable);

        rpGetInfoRepairTableButton.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        rpGetInfoRepairTableButton.setForeground(new java.awt.Color(0, 153, 255));
        rpGetInfoRepairTableButton.setText("GET INFO");
        rpGetInfoRepairTableButton.setToolTipText("get information of the selected repairs");

        rpDeleteRepairsTableButton.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        rpDeleteRepairsTableButton.setForeground(new java.awt.Color(255, 0, 0));
        rpDeleteRepairsTableButton.setText("DELETE");
        rpDeleteRepairsTableButton.setToolTipText("Delete the selected repairs");

        rpEditRepairsTableButton.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        rpEditRepairsTableButton.setForeground(new java.awt.Color(255, 153, 0));
        rpEditRepairsTableButton.setText("EDIT");
        rpEditRepairsTableButton.setToolTipText("Edit the selected repairs");
        rpEditRepairsTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rpEditRepairsTableButtonActionPerformed(evt);
            }
        });

        rpAddRepairsTableButton.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        rpAddRepairsTableButton.setForeground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));
        rpAddRepairsTableButton.setText("ADD...");
        rpAddRepairsTableButton.setToolTipText("Show add form for insert the new repairs data");

        rpRepairsTableHeaderLabel.setText("Repairs table information");

        rpRepairsFormPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Repairs Data Form"));

        rpRepairsTypeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rpRepairsTypeLabel.setText("Maintenance type:");
        rpRepairsTypeLabel.setToolTipText("Type of repair");

        rpRepairTypeComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rpRepairTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please choose the type of maintenance here...", "SOFTWARE UPDATE", "REINSTALLATION", "HARDWARE UPDATE", "HARDWARE REPAIR" }));
        rpRepairTypeComboBox.setToolTipText("Choose the type of repair");
        rpRepairTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rpRepairTypeComboBoxActionPerformed(evt);
            }
        });

        rpDischargeDateLabel.setText("Discharge date:");
        rpDischargeDateLabel.setToolTipText("");

        rpDischargeDateFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        rpDischargeDateFormattedTextField.setToolTipText("Insert here the discharge date in dd/MM/yyyy format");
        rpDischargeDateFormattedTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rpDischargeDateFormattedTextFieldActionPerformed(evt);
            }
        });

        rpContactPersonLabel.setText("Contact person:");
        rpContactPersonLabel.setToolTipText("");

        rpContactPersonTextField.setToolTipText("Insert here the name of contact person");

        rpObservationsRepairLabel.setText("Observations:");

        rpObservationsOfRepairTextField.setToolTipText("Insert here the observations of reapir");
        rpObservationsOfRepairTextField.setMinimumSize(new java.awt.Dimension(64, 30));
        rpObservationsOfRepairTextField.setPreferredSize(new java.awt.Dimension(64, 30));
        rpObservationsOfRepairTextField.setVerifyInputWhenFocusTarget(false);

        rpPhoneContactLabel.setText("Phone contact:");

        rpPhoneContactTextField.setToolTipText("Insert here the number of phone for contact");
        rpPhoneContactTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rpPhoneContactTextFieldActionPerformed(evt);
            }
        });

        rpDescriptionRepairLabel.setText("Repair description");

        rpDescriptionRepairTextArea.setColumns(20);
        rpDescriptionRepairTextArea.setRows(5);
        rpDescriptionRepairTextArea.setToolTipText("Insert here an complete description of the repair");
        rpRepairDescriptionScrollPane.setViewportView(rpDescriptionRepairTextArea);

        rpIsPerformedCheckBox.setText("Maintenance performed");
        rpIsPerformedCheckBox.setToolTipText("the maintenance is finished?");
        rpIsPerformedCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rpIsPerformedCheckBoxActionPerformed(evt);
            }
        });

        rpSaveButton.setBackground(new java.awt.Color(153, 255, 153));
        rpSaveButton.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        rpSaveButton.setText("SAVE");
        rpSaveButton.setToolTipText("Save and asign the new repair to the computer");
        rpSaveButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 0), 2, true)));
        rpSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rpSaveButtonActionPerformed(evt);
            }
        });

        rpCancelButton.setBackground(new java.awt.Color(255, 102, 102));
        rpCancelButton.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        rpCancelButton.setText("CANCEL");
        rpCancelButton.setToolTipText("exit whitout saving ");
        rpCancelButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 2, true)));
        rpCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rpCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rpRepairsFormPanelLayout = new javax.swing.GroupLayout(rpRepairsFormPanel);
        rpRepairsFormPanel.setLayout(rpRepairsFormPanelLayout);
        rpRepairsFormPanelLayout.setHorizontalGroup(
            rpRepairsFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rpRepairsFormPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rpDescriptionRepairLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(rpRepairsFormPanelLayout.createSequentialGroup()
                .addGroup(rpRepairsFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rpRepairsFormPanelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(rpRepairsFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(rpRepairsFormPanelLayout.createSequentialGroup()
                                .addComponent(rpObservationsRepairLabel)
                                .addGap(18, 18, 18)
                                .addComponent(rpObservationsOfRepairTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(rpRepairsFormPanelLayout.createSequentialGroup()
                                .addComponent(rpDischargeDateLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rpDischargeDateFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(rpRepairsFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(rpRepairsFormPanelLayout.createSequentialGroup()
                                .addComponent(rpPhoneContactLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rpPhoneContactTextField))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rpRepairsFormPanelLayout.createSequentialGroup()
                                .addComponent(rpContactPersonLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rpContactPersonTextField))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rpRepairsFormPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(rpIsPerformedCheckBox))
                    .addGroup(rpRepairsFormPanelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(rpRepairsFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(rpRepairsFormPanelLayout.createSequentialGroup()
                                .addComponent(rpSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rpCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rpRepairsFormPanelLayout.createSequentialGroup()
                                .addComponent(rpRepairsTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rpRepairTypeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(rpRepairDescriptionScrollPane, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(8, 8, 8))
        );
        rpRepairsFormPanelLayout.setVerticalGroup(
            rpRepairsFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rpRepairsFormPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(rpRepairsFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rpRepairsTypeLabel)
                    .addComponent(rpRepairTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(rpRepairsFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rpRepairsFormPanelLayout.createSequentialGroup()
                        .addGroup(rpRepairsFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rpDischargeDateFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rpDischargeDateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(rpRepairsFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rpObservationsOfRepairTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rpObservationsRepairLabel)))
                    .addGroup(rpRepairsFormPanelLayout.createSequentialGroup()
                        .addGroup(rpRepairsFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rpContactPersonLabel)
                            .addComponent(rpContactPersonTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(rpRepairsFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rpPhoneContactLabel)
                            .addComponent(rpPhoneContactTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(rpDescriptionRepairLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rpRepairDescriptionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rpIsPerformedCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(rpRepairsFormPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rpSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rpCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout rpRepairsTabPanelLayout = new javax.swing.GroupLayout(rpRepairsTabPanel);
        rpRepairsTabPanel.setLayout(rpRepairsTabPanelLayout);
        rpRepairsTabPanelLayout.setHorizontalGroup(
            rpRepairsTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rpRepairsTabPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(rpRepairsTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rpRepairsTableHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rpTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(rpRepairsTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(rpRepairsFormPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, rpRepairsTabPanelLayout.createSequentialGroup()
                            .addComponent(rpDeleteRepairsTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(rpGetInfoRepairTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(rpEditRepairsTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(rpAddRepairsTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        rpRepairsTabPanelLayout.setVerticalGroup(
            rpRepairsTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rpRepairsTabPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(rpRepairsTableHeaderLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rpTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rpRepairsTabPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rpDeleteRepairsTableButton)
                    .addComponent(rpGetInfoRepairTableButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rpEditRepairsTableButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rpAddRepairsTableButton))
                .addGap(18, 18, 18)
                .addComponent(rpRepairsFormPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabsContainerTabbedPane.addTab("Repairs", rpRepairsTabPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabsContainerTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(tabsContainerTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rpEditRepairsTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rpEditRepairsTableButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rpEditRepairsTableButtonActionPerformed

    private void ctCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ctCancelButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ctCancelButtonActionPerformed

    private void ctSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ctSaveButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ctSaveButtonActionPerformed

    private void ctCaseTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ctCaseTypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ctCaseTypeComboBoxActionPerformed

    private void ctSerialNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ctSerialNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ctSerialNumberTextFieldActionPerformed

    private void ctComputerTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ctComputerTypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ctComputerTypeComboBoxActionPerformed

    private void ctEditComputersTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ctEditComputersTableButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ctEditComputersTableButtonActionPerformed

    private void rpCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rpCancelButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rpCancelButtonActionPerformed

    private void rpSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rpSaveButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rpSaveButtonActionPerformed

    private void rpIsPerformedCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rpIsPerformedCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rpIsPerformedCheckBoxActionPerformed

    private void rpPhoneContactTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rpPhoneContactTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rpPhoneContactTextFieldActionPerformed

    private void rpDischargeDateFormattedTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rpDischargeDateFormattedTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rpDischargeDateFormattedTextFieldActionPerformed

    private void rpRepairTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rpRepairTypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rpRepairTypeComboBoxActionPerformed

    public void addCtComputersTableSelectionListener(ListSelectionListener listener) {
        ctComputersTable.getSelectionModel().addListSelectionListener(listener);
    }

    public void addComputerTypeComboBoxActionListener(ActionListener listener) {
        ctComputerTypeComboBox.addActionListener(listener);
    }

    public void addCtAddComputersTableButtonListener(ActionListener listener) {
        ctAddComputersTableButton.addActionListener(listener);
    }

    public void addCtEditComputersTableButtonListener(ActionListener listener) {
        ctEditComputersTableButton.addActionListener(listener);
    }

    public void addCtGetInfoComputersTableButtonListener(ActionListener listener) {
        ctGetInfoComputersTableButton.addActionListener(listener);
    }

    public void addCtDeleteComputersTableButtonListener(ActionListener listener) {
        ctDeleteComputersTableButton.addActionListener(listener);
    }

    public void addCtSaveButtonListener(ActionListener listener) {
        ctSaveButton.addActionListener(listener);
    }

    public void addCtCancelButtonListener(ActionListener listener) {
        ctCancelButton.addActionListener(listener);
    }

    public void controlComputersTableSelectionPossibility(boolean isEnabled) {
        ctComputersTable.setEnabled(isEnabled);
    }

    public void ctAddButtonIsEnabled(boolean enabled) {
        ctAddComputersTableButton.setEnabled(enabled);
    }

    public void ctEditButtonIsEnabled(boolean enabled) {
        ctEditComputersTableButton.setEnabled(enabled);
    }

    public void ctGetInfoButtonIsEnabled(boolean enabled) {
        ctGetInfoComputersTableButton.setEnabled(enabled);
    }

    public void ctDeleteButtonIsEnabled(boolean enabled) {
        ctDeleteComputersTableButton.setEnabled(enabled);
    }

    public void ctSaveButtonIsEnabled(boolean enabled) {
        ctSaveButton.setEnabled(enabled);
    }

    public void ctCancelButtonIsEnabled(boolean enabled) {
        ctCancelButton.setEnabled(enabled);
    }

    public JComboBox<String> getComputerTypeComboBox() {
        return ctComputerTypeComboBox;
    }

    public void setCtSerialNumberText(String value) {
        ctSerialNumberTextField.setText(value);
    }

    public String getCtSerialNumberText() {
        return ctSerialNumberTextField.getText().trim();
    }

    public void setCtBrandText(String value) {
        ctBrandTextField.setText(value);
    }

    public String getCtBrandText() {
        return ctBrandTextField.getText().trim();
    }

    public void setCtModelText(String value) {
        ctModelTextField.setText(value);
    }

    public String getCtModelText() {
        return ctModelTextField.getText().trim();
    }

    public void setCtBatteryCapacityText(String value) {
        ctBatteryCapacityTextField.setText(value);
    }

    public String getCtBatteryCapacityText() {
        return ctBatteryCapacityTextField.getText().trim();
    }

    public void setCtCaseType(String value) {
        ctCaseTypeComboBox.setSelectedItem(value);
    }

    public String getCtCaseType() {
        return ctCaseTypeComboBox.getSelectedItem().toString();
    }

    public void setCtRaidConfiguration(String value) {
        ctRaidSpinner.setValue(value);
    }

    public String getCtRaidConfiguration() {
        return ctRaidSpinner.getValue().toString();
    }

    public int getSelectedRowInComputersTable() {
        return ctComputersTable.getSelectedRow();
    }

    public String getSerialNumberValueInComputersTable(int selectedRow) {
        return (String) ctComputersTable.getValueAt(selectedRow, 0);
    }

    public void formPanelComputersIsVisible(boolean formVisible) {
        ctComputersFormPanel.setVisible(formVisible);
    }

    public boolean isFormPanelComputersVisible() {
        return ctComputersFormPanel.isVisible();
    }

    public void clearComputersForm() {
        ctSerialNumberTextField.setText("");
        ctBrandTextField.setText("");
        ctModelTextField.setText("");
        ctBatteryCapacityTextField.setText("");
        ctComputerTypeComboBox.setSelectedIndex(0);
        ctCaseTypeComboBox.setSelectedIndex(0);
        ctRaidSpinner.setValue("None");
    }

    public void updateComputersTable(HashMap<String, Computer> computers) {
        DefaultTableModel model = (DefaultTableModel) ctComputersTable.getModel();
        model.setRowCount(0);
        for (Map.Entry<String, Computer> entry : computers.entrySet()) {
            Computer computer = entry.getValue();
            model.addRow(new Object[]{
                computer.getSerialNumber(),
                computer.getBrand(),
                computer.getModel(),
                computer.getClass().getSimpleName()
            });
        }
    }

    public void ctFormVisibilityAutoManage(String computerType) {
        boolean commonVisibility = !computerType.equals("Please choose the type of computer here...");
        boolean desktopVisibility = computerType.equals("DESKTOP");
        boolean laptopVisibility = computerType.equals("LAPTOP");
        boolean serverVisibility = computerType.equals("SERVER");
        ctSerialNumberLabel.setVisible(commonVisibility);
        ctSerialNumberTextField.setVisible(commonVisibility);
        ctBrandLabel.setVisible(commonVisibility);
        ctBrandTextField.setVisible(commonVisibility);
        ctModelLabel.setVisible(commonVisibility);
        ctModelTextField.setVisible(commonVisibility);
        ctCaseTypeLabel.setVisible(desktopVisibility);
        ctCaseTypeComboBox.setVisible(desktopVisibility);
        ctBatteryCapacityLabel.setVisible(laptopVisibility);
        ctBatteryCapacityTextField.setVisible(laptopVisibility);
        ctRaidLabel.setVisible(serverVisibility);
        ctRaidSpinner.setVisible(serverVisibility);
    }

    public void TABrepsActiveAndRename(String name, boolean active) {
        int repairsTabIndex = tabsContainerTabbedPane.indexOfComponent(rpRepairsTabPanel);
        if (repairsTabIndex != -1) {
            tabsContainerTabbedPane.setTitleAt(repairsTabIndex, name);
            tabsContainerTabbedPane.setEnabledAt(repairsTabIndex, active);
        }
    }

    public void clearComputerTableSelection() {
        ctComputersTable.clearSelection();
    }

//*******************************************************************************************************************************************************************************************************************************************************************************************
// MÉTODOS PARA REPARACIONES **********************************************************************************************************************************************************************************************************************************************************************
//*******************************************************************************************************************************************************************************************************************************************************************************************
    public void addRpRepairsTableSelectionListener(ListSelectionListener listener) {
        rpRepairsTable.getSelectionModel().addListSelectionListener(listener);
    }

    public void addRepairTypeComboBoxActionListener(ActionListener listener) {
        rpRepairTypeComboBox.addActionListener(listener);
    }

    public void addRpAddRepairsTableButtonListener(ActionListener listener) {
        rpAddRepairsTableButton.addActionListener(listener);
    }

    public void addRpEditRepairsTableButtonListener(ActionListener listener) {
        rpEditRepairsTableButton.addActionListener(listener);
    }

    public void addRpGetInfoRepairsTableButtonListener(ActionListener listener) {
        rpGetInfoRepairTableButton.addActionListener(listener);
    }

    public void addRpDeleteRepairsTableButtonListener(ActionListener listener) {
        rpDeleteRepairsTableButton.addActionListener(listener);
    }

    public void addRpSaveButtonListener(ActionListener listener) {
        rpSaveButton.addActionListener(listener);
    }

    public void addRpCancelButtonListener(ActionListener listener) {
        rpCancelButton.addActionListener(listener);
    }

    public void controlRepairsTableSelectionPossibility(boolean isEnabled) {
        rpRepairsTable.setEnabled(isEnabled);
    }

    public void rpAddButtonIsEnabled(boolean enable) {
        rpAddRepairsTableButton.setEnabled(enable);
    }

    public void rpEditButtonIsEnabled(boolean enable) {
        rpEditRepairsTableButton.setEnabled(enable);
    }

    public void rpGetInfoButtonIsEnabled(boolean enable) {
        rpGetInfoRepairTableButton.setEnabled(enable);
    }

    public void rpDeleteButtonIsEnabled(boolean enable) {
        rpDeleteRepairsTableButton.setEnabled(enable);
    }

    public void rpSaveButtonIsEnabled(boolean enabled) {
        rpSaveButton.setEnabled(enabled);
    }

    public void rpCancelButtonIsEnabled(boolean enabled) {
        rpCancelButton.setEnabled(enabled);
    }

    public JComboBox<String> getRepairTypeComboBox() {
        return rpRepairTypeComboBox;
    }

    public void setRpDescription(String description) {
        rpDescriptionRepairTextArea.setText(description);
    }

    public void setRpContactPerson(String contactPerson) {
        rpContactPersonTextField.setText(contactPerson);
    }

    public String getRpDescription() {
        return rpDescriptionRepairTextArea.getText();
    }

    public String getRpContactPerson() {
        return rpContactPersonTextField.getText();
    }

    public void setRpPhoneContact(String phoneContact) {
        rpPhoneContactTextField.setText(phoneContact);
    }

    public String getRpPhoneContact() {
        return rpPhoneContactTextField.getText();
    }

    public void setRpDischargeDate(String dischargeDate) {
        rpDischargeDateFormattedTextField.setText(dischargeDate);
    }

    public String getRpDischargeDate() {
        return rpDischargeDateFormattedTextField.getText();
    }

    public void setRpObservationsOfRepairTextField(String observations) {
        rpObservationsOfRepairTextField.setText(observations);
    }

    public String getRpObservationsOfRepairTextField() {
        return rpObservationsOfRepairTextField.getText();
    }

    public void setRpIsPerformedCheckBoxSelected(boolean performed) {
        rpIsPerformedCheckBox.setSelected(performed);
    }

    public boolean isRpIsPerformedCheckBoxSelected() {
        return rpIsPerformedCheckBox.isSelected();
    }

    public int getSelectedRowInRepairsTable() {
        return rpRepairsTable.getSelectedRow();
    }

    public String getSerialNumberValueInRepairsTable(int selectedRow) {
        return (String) rpRepairsTable.getValueAt(selectedRow, 0);
    }

    public void formPanelRepairsIsVisible(boolean visible) {
        rpRepairsFormPanel.setVisible(visible);
    }

    public boolean isFormPanelRepairsVisible() {
        return rpRepairsFormPanel.isVisible();
    }

    public void clearRepairsForm() {
        rpRepairTypeComboBox.setSelectedIndex(0);
        rpDischargeDateFormattedTextField.setText("");
        rpContactPersonTextField.setText("");
        rpPhoneContactTextField.setText("");
        rpObservationsOfRepairTextField.setText("");
        rpDescriptionRepairTextArea.setText("");
        rpIsPerformedCheckBox.setSelected(false);
    }

    public void updateRepairsTable(List<Repair> repairs) {
        DefaultTableModel model = (DefaultTableModel) rpRepairsTable.getModel();
        model.setRowCount(0);
        for (Repair repair : repairs) {
            model.addRow(new Object[]{
                repair.isPerformed() ? "Yes" : "No",
                repair.getType(),
                repair.getDischargeDate(),
                repair.getPhoneContact(),
                repair.getObservations()
            });
        }
    }

    public void rpFormVisibilityAutoManage(String repairType) {
        boolean isVisible = !repairType.equals("Please choose the type of maintenance here...");

        rpDischargeDateLabel.setVisible(isVisible);
        rpDischargeDateFormattedTextField.setVisible(isVisible);
        rpContactPersonLabel.setVisible(isVisible);
        rpContactPersonTextField.setVisible(isVisible);
        rpPhoneContactLabel.setVisible(isVisible);
        rpPhoneContactTextField.setVisible(isVisible);
        rpObservationsRepairLabel.setVisible(isVisible);
        rpObservationsOfRepairTextField.setVisible(isVisible);
        rpDescriptionRepairLabel.setVisible(isVisible);
        rpRepairDescriptionScrollPane.setVisible(isVisible);
        rpIsPerformedCheckBox.setVisible(isVisible);
    }

    public void clearRepairsTableSelection() {
        rpRepairsTable.clearSelection();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ctAddComputersTableButton;
    private javax.swing.JLabel ctBatteryCapacityLabel;
    private javax.swing.JTextField ctBatteryCapacityTextField;
    private javax.swing.JLabel ctBrandLabel;
    private javax.swing.JTextField ctBrandTextField;
    private javax.swing.JButton ctCancelButton;
    private javax.swing.JComboBox<String> ctCaseTypeComboBox;
    private javax.swing.JLabel ctCaseTypeLabel;
    private javax.swing.JComboBox<String> ctComputerTypeComboBox;
    private javax.swing.JLabel ctComputerTypeLabel;
    private javax.swing.JPanel ctComputersFormPanel;
    private javax.swing.JPanel ctComputersTabPanel;
    private javax.swing.JTable ctComputersTable;
    private javax.swing.JLabel ctComputersTableHeaderLabel;
    private javax.swing.JButton ctDeleteComputersTableButton;
    private javax.swing.JButton ctEditComputersTableButton;
    private javax.swing.JButton ctGetInfoComputersTableButton;
    private javax.swing.JLabel ctModelLabel;
    private javax.swing.JTextField ctModelTextField;
    private javax.swing.JLabel ctRaidLabel;
    private javax.swing.JSpinner ctRaidSpinner;
    private javax.swing.JButton ctSaveButton;
    private javax.swing.JLabel ctSerialNumberLabel;
    private javax.swing.JTextField ctSerialNumberTextField;
    private javax.swing.JScrollPane ctTableScrollPane;
    private javax.swing.JButton rpAddRepairsTableButton;
    private javax.swing.JButton rpCancelButton;
    private javax.swing.JLabel rpContactPersonLabel;
    private javax.swing.JTextField rpContactPersonTextField;
    private javax.swing.JButton rpDeleteRepairsTableButton;
    private javax.swing.JLabel rpDescriptionRepairLabel;
    private javax.swing.JTextArea rpDescriptionRepairTextArea;
    private javax.swing.JFormattedTextField rpDischargeDateFormattedTextField;
    private javax.swing.JLabel rpDischargeDateLabel;
    private javax.swing.JButton rpEditRepairsTableButton;
    private javax.swing.JButton rpGetInfoRepairTableButton;
    private javax.swing.JCheckBox rpIsPerformedCheckBox;
    private javax.swing.JTextField rpObservationsOfRepairTextField;
    private javax.swing.JLabel rpObservationsRepairLabel;
    private javax.swing.JLabel rpPhoneContactLabel;
    private javax.swing.JTextField rpPhoneContactTextField;
    private javax.swing.JScrollPane rpRepairDescriptionScrollPane;
    private javax.swing.JComboBox<String> rpRepairTypeComboBox;
    private javax.swing.JPanel rpRepairsFormPanel;
    private javax.swing.JPanel rpRepairsTabPanel;
    private javax.swing.JTable rpRepairsTable;
    private javax.swing.JLabel rpRepairsTableHeaderLabel;
    private javax.swing.JLabel rpRepairsTypeLabel;
    private javax.swing.JButton rpSaveButton;
    private javax.swing.JScrollPane rpTableScrollPane;
    private javax.swing.JTabbedPane tabsContainerTabbedPane;
    // End of variables declaration//GEN-END:variables

    public void setSelectedRowInComputersTable(int rowIndex) {
        ctComputersTable.setRowSelectionInterval(rowIndex, rowIndex);
    }

    public void setSelectedRowInRepairsTable(int rowIndex) {
        rpRepairsTable.setRowSelectionInterval(rowIndex, rowIndex);
    }

}
